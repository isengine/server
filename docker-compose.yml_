version: "3"

services:

  api:
    build: ./api
    restart: unless-stopped
    volumes:
      - ../api:/var/www
    working_dir: /var/www
    command: >
      bash -c "yarn
      && yarn prisma generate
      && yarn start"
    ports:
      - 5000:5000
    networks:
      - network

  auth:
    build: ./auth
    restart: unless-stopped
    volumes:
      - ../auth:/var/www
    working_dir: /var/www
    command: >
      bash -c "yarn
      && yarn prisma generate
      && yarn start"
    ports:
      - 5001:5001
    networks:
      - network

  static:
    build: ./static
    restart: unless-stopped
    volumes:
      - ../static:/var/www
    working_dir: /var/www
    command: bash -c "yarn && yarn start"
    ports:
      - 8080:8080
    networks:
      - network

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ../:/var/www
    ports:
      - 80:80
      - 443:443
    links:
      - adminer
      - api
      - mysql
      - postgres
      - static
    networks:
      - network

  #python:
  #  build: ./python
  #  restart: unless-stopped
  #  environment:
  #    - TZ=${WORKSPACE_TIMEZONE}
  #    - PYTHONDONTWRITEBYTECODE=1
  #    - PYTHONUNBUFFERED=1
  #  volumes:
  #    - ../:/var/www
  #  working_dir: /var/www/
  #  depends_on:
  #    - nginx
  #  ports:
  #    - 8000:8000
  #  networks:
  #    - network

  php:
    build: ./php
    restart: unless-stopped
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ../:/var/www
      - ./.ssh:/.ssh
      - ./php/conf.d:/usr/local/etc/php/conf.d
      - ./php/supervisor.d:/etc/supervisor.d
    working_dir: /var/www/
    depends_on:
      - nginx
    ports:
      - 9000:9000
    networks:
      - network

  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DEFAULT_SERVER=${MYSQL_HOST}
    volumes:
      - ./db/adminer:/etc/php/7.4/cli/conf.d
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      - network

  mysql:
    image: mysql:8.0.29
    hostname: ${MYSQL_HOST}
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/conf.d:/etc/mysql/conf.d
      - ./db/mysql/logs:/var/log/mysql
      - ./db/mysql/dump:/dump
    command: --default-authentication-plugin=mysql_native_password --skip_name_resolve
    depends_on:
      - phpmyadmin
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - network

  phpmyadmin:
    image: phpmyadmin:latest
    restart: unless-stopped
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
      - PMA_ARBITRARY=1
      - MYSQL_HOST=${MYSQL_HOST}
    volumes:
      - ./db/phpmyadmin:/usr/local/etc/php/conf.d
    ports:
      - ${PHPMYADMIN_PORT}:80
    networks:
      - network

  postgres:
    image: postgres:alpine
    hostname: ${POSTGRES_HOST}
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db/postgres/data:/var/lib/postgresql/data
      - ./db/postgres/dump:/dump
    depends_on:
      - pgadmin
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${POSTGRES_USER}@${POSTGRES_HOST}.sql
      - PGADMIN_DEFAULT_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - network

  #redis:
  #  image: redis:latest
  #  environment:
  #    - TZ=${WORKSPACE_TIMEZONE}
  #  volumes:
  #    - ./db/redis/data:/var/lib/redis
  #    - ./db/redis/conf:/usr/local/etc/redis/redis.conf
  #  depends_on:
  #    - redis-commander
  #  ports:
  #    - ${REDIS_PORT}:6379
  #  networks:
  #    - network

  #redis-commander:
  #  image: rediscommander/redis-commander:latest
  #  hostname: redis-commander
  #  restart: always
  #  environment:
  #    - REDIS_HOSTS=local:${REDIS_HOST}:${REDIS_PORT}
  #  ports:
  #    - ${REDIS_COMMANDER_PORT}:8081
  #  networks:
  #    - network

  #mongo:
  #  image: mongo:4.2
  #  environment:
  #    - TZ=${WORKSPACE_TIMEZONE}
  #  volumes:
  #    - ./db/mongo/db:/data/db
  #    - ./db/mongo/configdb:/data/configdb
  #    - ./db/mongo/dump:/dump
  #  ports:
  #    - ${MONGO_PORT}:27017
  #  networks:
  #    - network

networks:
  network:
    driver: bridge
